#pragma once
#include "UIPlugins.h"
#include "x3py/module/classmacro.h"
#include <osgGA/GUIEventHandler> 
#include <osgEarthUtil/MeasureTool>
 
#include<osgEarthAnnotation/CircleNode>
#include "vPointSurveyInfoWin.h"


using namespace osgEarth::Util;
USING_NAMESPACE_EARTHMATRIX


class PointSuerveyToolEventHandler  : public osgGA::GUIEventHandler
{
public:
#ifdef _2D
	PointSuerveyToolEventHandler(CPointSurveyInfoWin* win);
#else
	PointSuerveyToolEventHandler(CPointSurveyInfoWin* win,const osgEarth::SpatialReference* m_pEllipsoid,osgEarth::Annotation::CircleNode* m_pCircleNode);
#endif
	

	  virtual bool handle(const osgGA::GUIEventAdapter& ea,osgGA::GUIActionAdapter&);
     virtual osg::Vec3d PointSuerveyToolEventHandler::getPos(const osgGA::GUIEventAdapter& ea,
    osgGA::GUIActionAdapter& aa, osg::Vec3d& pos);
	CPointSurveyInfoWin* m_pWin;
	osgEarth::Annotation::CircleNode* m_pCircleNode;
	 const osg::EllipsoidModel* m_pEllipsoid;
	 const osgEarth::SpatialReference* spf;
};
const char* const clsidvlPointSurvey = "00000000-0000-0000-0040-000000000010";
class CvlPointSurvey : public IUICommon, public IUICommand, public IUITool
{
	X3BEGIN_CLASS_DECLARE(CvlPointSurvey, clsidvlPointSurvey)		
		X3DEFINE_INTERFACE_ENTRY(IUICommon)		
		X3DEFINE_INTERFACE_ENTRY(IUICommand)		
		X3DEFINE_INTERFACE_ENTRY(IUITool)		
	X3END_CLASS_DECLARE()

public:
	CvlPointSurvey(void);
	~CvlPointSurvey(void);

public:
	// IUICommon
	virtual bool Initialize();
	virtual bool UnInitialize();
	virtual bool SetBuddy(x3::IObject* val);

	// IUICommand
	virtual bool OnClick();
	virtual bool Checked();

	virtual bool Activate();
	virtual bool Deactivate();

	bool bInSurvey;
 
	osg::ref_ptr<PointSuerveyToolEventHandler> m_spPointEventHandler;

	CPointSurveyInfoWin* m_pPointSurveyInfoWin; 

	osgEarth::Symbology::Style m_circleStyle;
	osgEarth::Annotation::CircleNode* m_pCircleNode;
    osg::Group* m_pLayerGroup;
};

